/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SampleOperatorAllowlist,
  SampleOperatorAllowlistInterface,
} from "../../contracts/SampleOperatorAllowlist";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "isAllowlisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAllowListed",
        type: "bool",
      },
    ],
    name: "setIsAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806305a3b8091461007e5780638d7f66f7146100aa575b600080fd5b61006a6100543660046100e5565b6001600160e01b0319166305a3b80960e01b1490565b604051901515815260200160405180910390f35b61006a61008c366004610132565b6001600160a01b031660009081526020819052604090205460ff1690565b6100e36100b836600461014d565b6001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b005b6000602082840312156100f757600080fd5b81356001600160e01b03198116811461010f57600080fd5b9392505050565b80356001600160a01b038116811461012d57600080fd5b919050565b60006020828403121561014457600080fd5b61010f82610116565b6000806040838503121561016057600080fd5b61016983610116565b91506020830135801515811461017e57600080fd5b80915050925092905056fea2646970667358221220670a6f094c8955c2d9fde518a83ab40f4a53884e05a6a50b092a25aa17377b1964736f6c63430008130033";

type SampleOperatorAllowlistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleOperatorAllowlistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleOperatorAllowlist__factory extends ContractFactory {
  constructor(...args: SampleOperatorAllowlistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SampleOperatorAllowlist & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SampleOperatorAllowlist__factory {
    return super.connect(runner) as SampleOperatorAllowlist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleOperatorAllowlistInterface {
    return new Interface(_abi) as SampleOperatorAllowlistInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SampleOperatorAllowlist {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SampleOperatorAllowlist;
  }
}
